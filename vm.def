// this stuff is used to make vscode happy!
// include, define and extern gets removed
// during vm-generation (see vm_gen.php).

#include "vm.h"
#include <assert.h>
#define NEXT return;
#define HALT return;
#define BAIL return;
#define WARN(m)
#define FLAG(x)
#define OPCODE(A, ...) void dummy__ ## A ()
extern struct vm *vm;
extern struct vm_arg *_0;
extern struct vm_arg *_1;

// actual code starts here:

OPCODE(NOP) {
  NEXT
}

OPCODE(SUB, 2) {
  switch (OPT_PAIR(_0->type, _1->type)) {
    case OPT_PAIR(OPT_BYTE, OPT_BYTE): {
      _0->data.byte -= _1->data.byte;
      if (_0->data.byte == 0) {
        vm_flag(vm, VM_ZF);
      }
      break;
    }
    case OPT_PAIR(OPT_WORD, OPT_WORD): {
      _0->data.word -= _1->data.word;
      if (_0->data.word == 0) {
        vm_flag(vm, VM_ZF);
      }
      break;
    }
    case OPT_PAIR(OPT_DWORD, OPT_DWORD): {
      _0->data.dword -= _1->data.dword;
      if (_0->data.dword == 0) {
        vm_flag(vm, VM_ZF);
      }
      break;
    }
  #if VM_USE_QWORD
    case OPT_PAIR(OPT_QWORD, OPT_QWORD): {
      _0->data.qword -= _1->data.qword;
      if (_0->data.qword == 0) {
        vm_flag(vm, VM_ZF);
      }
      break;
    }
  #endif
    default:
      BAIL
  }
  NEXT
}

OPCODE(ADD, 2) {
  switch (OPT_PAIR(_0->type, _1->type)) {
    case OPT_PAIR(OPT_BYTE, OPT_BYTE): {

    }
  }
}
